/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.35
 * Generated at: 2016-04-18 05:11:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Res.JSP.User;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import com.DAO.*;
import com.helperclass.*;
import javax.xml.*;
import javax.xml.xpath.*;
import org.w3c.dom.*;
import javax.xml.parsers.*;
import java.util.*;
import java.text.*;
import java.io.*;
import com.user.RandomValue;

public final class approve_005frequest_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<link href=\"");
      out.print(request.getContextPath());
      out.write("/Res/CSS/style1.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("</head>\r\n");

ArrayList<String> list=new ArrayList<String>();
String filename = request.getParameter("fname");

String mid = request.getParameter("mid");

System.out.println("filename :"+filename+"mid :"+mid);

String b = UserDAO.approveRequest(mid);


String[] uid_key = b.split("~");
String userid = uid_key[0];
String aes_key = uid_key[1];

ArrayList<String> cloud = UserDAO.getCloud1();

String server = cloud.get(0);

String user = cloud.get(1);
String pass = cloud.get(2);

String dirToCreate = "Cloud_SaDas/"+userid;

/* //String approve_file_path=request.getRealPath("")+"/Files/Approve_File/"+filename; */

String approve_file_pathnew=request.getRealPath("")+"/Files/ApprovedBlocks/";
String approve_filedecrypt_pathnew=request.getRealPath("")+"/Files/ApprovedBlocksDecrypt/";

list=UserDAO.getBlocks(filename);
 System.out.println("----------LIST---------"+list);
 
 
 String master_key = UserDAO.getMasterkey();

 
    for(int i=0;i<list.size();i++)
    {
   // File ff=new File(ouput_path1+list.get(i));
    
    System.out.println("==============Approved Path========="+approve_file_pathnew+list.get(i));
    String dwn_form_cloud12 = Cloud1_Download.download(server, user, pass, list.get(i),dirToCreate,approve_file_pathnew+list.get(i));
    AES_File_EncNdec.decryptFile(approve_file_pathnew+list.get(i),approve_filedecrypt_pathnew+list.get(i),master_key);
    System.out.println("==============Approve decrypt block========="+approve_filedecrypt_pathnew+list.get(i));
   // list2.add(new File(decrpt_blocks_file_path+list.get(i)));

	      //  String dwn_form_cloud1 = Cloud1_Download.download(server, user, pass, filename,dirToCreate,dwn_file_path);
			
	       // System.out.println("Download File Path :"+dwn_form_cloud1);
	        
	        // Decrypt the file by using user key //
	        
	     //   AES_File_EncNdec.decryptFile(dwn_form_cloud1,decrpt_file_path,gpvtkey);
	        
	        // Delete the file from cloud //
	        
    } 
    for(int i=0;i<list.size();i++)
    {
    	FTP_DeleteFiles.deleteFilesOnCloud2(userid,list.get(i));
    }


// Download File Cloud 2  //
//String dwn_form_cloud1 = Cloud1_Download.download(server, user, pass, filename,dirToCreate,approve_file_path);
		
//System.out.println("Approve File Path :"+dwn_form_cloud1);

//FTP_DeleteFiles.deleteFilesOnCloud(userid,filename);


// Decrypt the file By using Master key //

//String approve_decrypt_path=request.getRealPath("")+"/Files/Approve_Decryption/"+filename;



//AES_File_EncNdec.decryptFile(dwn_form_cloud1,approve_decrypt_path,master_key);

//Encrypt File By using user key //

String approve_encrypt_path=request.getRealPath("")+"/Files/Approve_Encryption/";
for(int i=0;i<list.size();i++)
{
AES_File_EncNdec.encryptFile(approve_filedecrypt_pathnew+list.get(i), approve_encrypt_path+list.get(i),aes_key);
}

// Upload Encrypted file into Cloud 1 //

ArrayList<String> cloud1 = UserDAO.getCloud();

String server1 = cloud1.get(0);

String user1 = cloud1.get(1);
String pass1 = cloud1.get(2);

System.out.println(" Cloud user1 :"+user1);

System.out.println("Cloud  pass1 :"+pass1);
for(int i=0;i<list.size();i++)
{

File f = new File(approve_encrypt_path+list.get(i));

FileUpload1.upload(server1,user1,pass1,list.get(i),f,dirToCreate);
}
boolean b1 = UserDAO.updateLivefile(mid,filename);


System.out.println("b1 :"+b);


if(b1)
{
	RequestDispatcher rd=request.getRequestDispatcher("/Res/JSP/Admin/view_request.jsp?no=1");
	rd.forward(request, response);
}
else
{
	RequestDispatcher rd=request.getRequestDispatcher("/Res/JSP/Admin/view_request.jsp?no=2");
	rd.forward(request, response);
}

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body></html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
